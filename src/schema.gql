# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type CenterOutput {
  address: String!
  createdAt: DateTime!
  estabilishedAt: DateTime!
  id: ID!
  logo: String!
  name: String!
  phone: String!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type ExamOutput {
  centerId: String!
  completedAt: DateTime!
  createdAt: DateTime!
  id: ID!
  isActive: Boolean!
  isCompleted: Boolean!
  startedAt: DateTime!
  title: String!
  updatedAt: DateTime!
}

type Mutation {
  createCenter(address: String!, estabilishedAt: DateTime!, logo: String!, name: String!, phone: String!): CenterOutput!
  createExam(centerId: String!, completedAt: DateTime!, isActive: Boolean!, isCompleted: Boolean!, startedAt: DateTime!, title: String!): ExamOutput!
  createStudentExam(comletedAt: DateTime!, date: DateTime!, examId: String!, isCompleted: Boolean!, startedAt: DateTime!, studentId: String!): StudentExamOutput!
  createUser(centerId: String, firstName: String!, lastName: String!, login: String!, password: String!): UserOutput!
  login(login: String!, password: String!, rememberMe: Boolean!): UserOutput!
  logout: String!
  removeCenter(id: String!): Boolean!
  removeExam(id: String!): Boolean!
  removeStudentExam(id: String!): Boolean!
  removeUser(id: String!): Boolean!
  updateCenter(address: String, estabilishedAt: DateTime, id: ID!, logo: String, name: String, phone: String): CenterOutput!
  updateExam(centerId: String, completedAt: DateTime, id: ID!, isActive: Boolean, isCompleted: Boolean, startedAt: DateTime, title: String): ExamOutput!
  updateStudentExam(comletedAt: DateTime, date: DateTime, examId: String, id: ID!, isCompleted: Boolean, startedAt: DateTime, studentId: String): StudentExamOutput!
  updateUser(centerId: String, firstName: String, id: ID!, lastName: String, login: String, password: String): UserOutput!
}

type Query {
  findAllCenters: [CenterOutput!]!
  findAllExams: [ExamOutput!]!
  findAllStudentExams: [StudentExamOutput!]!
  findAllUsers: [UserOutput!]!
  findOneCenter(id: String!): CenterOutput!
  findOneExam(id: String!): ExamOutput!
  findOneStudentExam(id: String!): StudentExamOutput!
  findOneUser(id: String!): UserOutput!
}

type StudentExamOutput {
  comletedAt: DateTime!
  createdAt: DateTime!
  date: DateTime!
  examId: String!
  id: ID!
  isCompleted: Boolean!
  startedAt: DateTime!
  studentId: String!
  updatedAt: DateTime!
}

type UserOutput {
  centerId: String
  createdAt: DateTime!
  firstName: String!
  id: ID!
  lastName: String!
  login: String!
  password: String!
  role: String!
  updatedAt: DateTime!
}